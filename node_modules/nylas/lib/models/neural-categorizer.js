"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var attributes_1 = __importDefault(require("./attributes"));
var message_1 = __importDefault(require("./message"));
var restful_model_1 = __importDefault(require("./restful-model"));
var Categorize = /** @class */ (function (_super) {
    __extends(Categorize, _super);
    function Categorize() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Categorize.prototype.toJSON = function () {
        return {
            category: this.category,
            categorized_at: this.categorizedAt,
            model_version: this.modelVersion,
            subcategories: this.subcategories,
        };
    };
    return Categorize;
}(restful_model_1.default));
exports.Categorize = Categorize;
Categorize.collectionName = 'categorize';
Categorize.attributes = {
    category: attributes_1.default.String({
        modelKey: 'category',
    }),
    categorizedAt: attributes_1.default.Date({
        modelKey: 'categorizedAt',
        jsonKey: 'categorized_at',
    }),
    modelVersion: attributes_1.default.String({
        modelKey: 'modelVersion',
        jsonKey: 'model_version',
    }),
    subcategories: attributes_1.default.StringList({
        modelKey: 'subcategories',
    }),
};
var NeuralCategorizer = /** @class */ (function (_super) {
    __extends(NeuralCategorizer, _super);
    function NeuralCategorizer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NeuralCategorizer.prototype.reCategorize = function (category) {
        var _this = this;
        return this.connection
            .request({
            method: 'POST',
            path: '/neural/categorize/feedback',
            body: { message_id: this.id, category: category },
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .then(function (json) {
            return _this.connection.neural.categorize(json['message_id']);
        });
    };
    return NeuralCategorizer;
}(message_1.default));
exports.default = NeuralCategorizer;
NeuralCategorizer.collectionName = 'categorizer';
NeuralCategorizer.attributes = __assign(__assign({}, message_1.default.attributes), { categorizer: attributes_1.default.Object({
        modelKey: 'categorizer',
        itemClass: Categorize,
    }) });
